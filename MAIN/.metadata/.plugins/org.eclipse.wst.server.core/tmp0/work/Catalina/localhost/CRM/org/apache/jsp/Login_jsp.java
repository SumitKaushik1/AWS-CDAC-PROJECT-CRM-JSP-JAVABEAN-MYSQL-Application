/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.36
 * Generated at: 2022-10-05 18:35:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1664452277603L));
    _jspx_dependants.put("jar:file:/C:/Users/amit/Desktop/main%20project/main%20project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/CRM/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write(" <title> LoginIn Page</title>\r\n");
      out.write("   \t\t<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\r\n");
      out.write("\t\t<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("           \r\n");
      out.write("\t\t<style>\r\n");
      out.write("\t\t\t body{\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t          background-image: linear-gradient( to bottom,#6a6363,gray);\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t .text-color{\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t\t   color:red;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t .visits-outer-box{\r\n");
      out.write("\t\t   font-size: 1.3rem;\r\n");
      out.write("\t\t   text-decoration: underline;\r\n");
      out.write("\t\t\tmargin-left: 77rem;\r\n");
      out.write("\t\t\tmargin-bottom: -6rem;\r\n");
      out.write("\t\t\tcolor: white;\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t \r\n");
      out.write("\t\t }\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t \r\n");
      out.write("\t\t .visits-inne-box{\r\n");
      out.write("\t\t   font-size: 2rem;\r\n");
      out.write("\t\t\ttext-align: center;\r\n");
      out.write("\t\t\twidth: 6rem;\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t }\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t</style>\r\n");
      out.write("\t\r\n");
      out.write("\t\t <script>\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t    function reset(){\r\n");
      out.write("\t\t\t\t\t\t document.getElementById(\"Id\").value=\"\";\r\n");
      out.write("\t\t\t\t\t\t document.getElementById(\"role_id\").value=\"\";\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t document.getElementById(\"first_name\").value=\"\";\r\n");
      out.write("\t\t\t\t\t\t document.getElementById(\"last_name\").value=\"\";\r\n");
      out.write("\t\t\t\t\t\t document.getElementById(\"passoword\").value=\"\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t    var flag1;<!--i am considering it is a number-->\r\n");
      out.write("\t\t\t   var count;\r\n");
      out.write("\t\t\t  function validate_ID(){\r\n");
      out.write("\t\t\t           count=0;\r\n");
      out.write("\t\t\t           flag1=true;\r\n");
      out.write("\t\t\t\t\t  var arr=[];\r\n");
      out.write("\t\t\t\t\t  arr =(document.getElementById(\"Id\").value).split(\"\");\r\n");
      out.write("\t\t\t\t\t if(arr[0]!=\"u\")\r\n");
      out.write("                        flag1=false;\r\n");
      out.write("\t\t\t\t     else \r\n");
      out.write("\t\t\t\t\t {\r\n");
      out.write("\t\t\t            for(var i=1;i<arr.length;++i){\r\n");
      out.write("\t\t\t\t\t\t       count++;\r\n");
      out.write("\t\t\t\t\t\t       if(isNaN(parseInt(arr[i])))\r\n");
      out.write("\t\t\t\t\t\t\t\t\tflag1=false;\r\n");
      out.write("                       \t }\r\n");
      out.write("\t\t\t\t    } \r\n");
      out.write("\t\t\t\t\t console.log(count)\r\n");
      out.write("\t\t\t         if(flag1 && (count==10))\r\n");
      out.write("\t\t\t\t     {   \r\n");
      out.write("\t\t\t\t\t    \r\n");
      out.write("\t\t\t\t\t\t document.getElementById(\"Id_message\").innerHTML=\"\";\r\n");
      out.write("\t\t\t\t\t\t  return true;\r\n");
      out.write("\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t }\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t          else\r\n");
      out.write("\t\t\t\t\t   {document.getElementById(\"Id_message\").innerHTML=\"id must start with u and  10 digit\";\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t   } \r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t    var flag2;<!--i am considering it is a number-->\r\n");
      out.write("\t\t\t   var count;\r\n");
      out.write("\t\t\t  function validate_role_ID(){\r\n");
      out.write("\t\t\t           count=0;\r\n");
      out.write("\t\t\t           flag2=true;\r\n");
      out.write("\t\t\t\t\t  var arr=[];\r\n");
      out.write("\t\t\t\t\t  arr =(document.getElementById(\"role_id\").value).split(\"\");\r\n");
      out.write("\t\t\t\t\t if(arr[0]!=\"r\")\r\n");
      out.write("                        flag2=false;\r\n");
      out.write("\t\t\t\t     else \r\n");
      out.write("\t\t\t\t\t {\r\n");
      out.write("\t\t\t            for(var i=1;i<arr.length;++i){\r\n");
      out.write("\t\t\t\t\t\t       count++;\r\n");
      out.write("\t\t\t\t\t\t       if(isNaN(parseInt(arr[i])))\r\n");
      out.write("\t\t\t\t\t\t\t\t\tflag2=false;\r\n");
      out.write("                       \t }\r\n");
      out.write("\t\t\t\t    } \r\n");
      out.write("\t\t\t\t\t console.log(count)\r\n");
      out.write("\t\t\t         if(flag2 && (count==10))\r\n");
      out.write("\t\t\t\t     {   \r\n");
      out.write("\t\t\t\t\t    \r\n");
      out.write("\t\t\t\t\t\t document.getElementById(\"role_message\").innerHTML=\"\";\r\n");
      out.write("\t\t\t\t\t\t  return true;\r\n");
      out.write("\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t }\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t          else\r\n");
      out.write("\t\t\t\t\t   {document.getElementById(\"role_message\").innerHTML=\"id must start with r and  10 digit\";\r\n");
      out.write("\t\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t   } \r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t\t \r\n");
      out.write("\t\t\t  function validate_first_name(){\r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t   \tif(document.getElementById(\"first_name\").value.length < 1)\r\n");
      out.write("\t\t\t\t    { document.getElementById(\"first_name_message\").innerHTML=\"enter the correct first name\";\r\n");
      out.write("\t\t\t\t\t return false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t    \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t       else\r\n");
      out.write("\t\t\t    {document.getElementById(\"first_name_message\").innerHTML=\"\";\r\n");
      out.write("\t\t\t\t   return true;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t}\t\t\t   \r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t   }\r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t     function validate_last_name(){\r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t   \tif(document.getElementById(\"last_name\").value.length < 1)\r\n");
      out.write("\t\t\t\t    { document.getElementById(\"last_name_message\").innerHTML=\"enter the correct last name\";\r\n");
      out.write("\t\t\t\t\t return false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t    \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t\t  \r\n");
      out.write("\t\t       else\r\n");
      out.write("\t\t\t    {document.getElementById(\"last_name_message\").innerHTML=\"\";\r\n");
      out.write("\t\t\t\t   return true;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t}\t\t\t   \r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t   }\r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t\t   \r\n");
      out.write("\t\t \r\n");
      out.write("\t\t </script>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t  \r\n");
      out.write("</head>\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    \t\t<div class=\"visits-outer-box\">\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\t       \r\n");
      out.write("\t\t\t\t      \r\n");
      out.write("\t\t </div> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!--  first time from browser come request then webcontainer see this ->  jsp:useBean  id=\"login\" class=\"bean.LoginBean\" scope=\"session\"\r\n");
      out.write(" internally browser do request.getSession() if previously from browser jsessinid(session) shared then it will not make the session if\r\n");
      out.write(" not any session then webcontainer will make the new session -->\r\n");
      out.write(" \r\n");
      out.write(" ");
      bean.LoginBean login = null;
      synchronized (session) {
        login = (bean.LoginBean) _jspx_page_context.getAttribute("login", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (login == null){
          login = new bean.LoginBean();
          _jspx_page_context.setAttribute("login", login, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("<!--  CLASS LOAD HERE and method area of server having id and scope as specified above\r\n");
      out.write(" ITS SETSPROPERTY(SETTER) IN THE VERIFY.JSP -->\r\n");
      out.write(" \r\n");
      out.write(" ");
      bean.CustomerInfoBean customer = null;
      synchronized (session) {
        customer = (bean.CustomerInfoBean) _jspx_page_context.getAttribute("customer", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (customer == null){
          customer = new bean.CustomerInfoBean();
          _jspx_page_context.setAttribute("customer", customer, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("<!--  CLASS LOAD HERE and method area of server having id and scope as specified above\r\n");
      out.write(" ITS SETSPROPERTY(SETTER) IN THE VERIFY.JSP -->\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" ");
      bean.SalesmanInfoBean salesman = null;
      synchronized (session) {
        salesman = (bean.SalesmanInfoBean) _jspx_page_context.getAttribute("salesman", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (salesman == null){
          salesman = new bean.SalesmanInfoBean();
          _jspx_page_context.setAttribute("salesman", salesman, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("<!--  CLASS LOAD HERE and method area of server having id and scope as specified above\r\n");
      out.write(" ITS SETSPROPERTY(SETTER) IN THE VERIFY.JSP -->\r\n");
      out.write(" \r\n");
      out.write(" ");
      bean.ProductInfoBean product = null;
      synchronized (session) {
        product = (bean.ProductInfoBean) _jspx_page_context.getAttribute("product", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (product == null){
          product = new bean.ProductInfoBean();
          _jspx_page_context.setAttribute("product", product, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("<!--  CLASS LOAD HERE and method area of server having id and scope as specified above\r\n");
      out.write(" ITS SETSPROPERTY(SETTER) IN THE VERIFY.JSP -->\r\n");
      out.write("  \r\n");
      out.write("  <form action=\"verify.jsp\" method=\"post\">\r\n");
      out.write("  \r\n");
      out.write("\t    <div class=\"container-fluid /*border border-primary*/ py-4 \" >\r\n");
      out.write("\t\t\t    <div class=\"/*border border-secondary*/ text-center fs-1\">\r\n");
      out.write("\t\t\t\t   <div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t    <div class=\"col-2\" Style=\"font-weight: bolder;opacity: 0.5;color: #130c17;font-family: monopause;\">\r\n");
      out.write("\t\t\t\t\t\t         <a href=\"Welcome.jsp\" style=\"color: #130c17;text-decoration: none;\">Home</a>\r\n");
      out.write("\t\t\t\t\t\t    </div>\r\n");
      out.write("\t\t\t\t\t\t    <div class=\"col-8\">\r\n");
      out.write("\t\t\t\t\t\t      LogIn\r\n");
      out.write("\t\t\t\t\t\t     </div>\r\n");
      out.write("\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t  \r\n");
      out.write("\t\t\t\t<!--   <span class=\"p\" style=\"color: #312424; font-style: oblique;\">Home</span>\r\n");
      out.write("                   style=\"color: #312424; font-style: oblique;\" -->\r\n");
      out.write("\t\t      \r\n");
      out.write("\t\t\t    </div>\r\n");
      out.write("\t\t\t        <div class=\"row /*border border-warning*/ justify-content-center align-items-center p-5  bg-light mx-5 my-5 gx-5 gy-4\"><!-- this row is made then only column can be there -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t    <div  class=\"col-12 /*border border-warning*/ \" style=\" color:black ;text-align:center;\"><!--in this all contents are there-->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t            <h5>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.login.message}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h5>\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\t            \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t    \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t   <div  class=\"col-4 /*border border-warning*/ bg-light shadow\"><!--in this all contents are there-->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"mb-2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"Id\" class=\"text-color\"> Login Id</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input  type=\"text\" id=\"Id\"  name=\"loginId\"  placeholder=\"enter the id\" class=\"form-control\"   required onblur=\"validate_ID()\"></input>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span id=\"Id_message\"></span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <div class=\"mb-2\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <label for=\"role_id\" class=\"text-color\"> Login Role Id</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <input  type=\"text\" id=\"role_id\" name=\"loginRoleId\" class=\"form-control\" placeholder=\"enter the role id\" onblur=\"validate_role_ID()\" required></input>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t     <span id=\"role_message\"></span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <div class=\"mb-2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"first_name\" class=\"text-color\">First Name:</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input  type=\"text\" id=\"first_name\"   name=\"loginFirstName\" class=\"form-control\" placeholder=\"enter the first name\" onblur=\"validate_first_name()\" required></input>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        <span id=\"first_name_message\"></span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <div class=\"mb-2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"last_name\" class=\"text-color\">Last Name:</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input  type=\"text\" id=\"last_name\"   name=\"loginLastName\" class=\"form-control\" placeholder=\"enter the last name\" onblur=\"validate_last_name()\" required></input>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        <span id=\"last_name_message\"></span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <div class=\"mb-2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                    \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <label for=\"password\" class=\"text-color\">Password</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input  type=\"password\" id=\"passoword\"  name=\"loginPassword\" class=\"form-control\" placeholder=\"enter the passoword\"required></input>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        <span id=\"pass_message\"></span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t               <div class=\" mb-2 text-center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t         <input type=\"submit\" value=\"Login\"  class=\"btn btn-primary\" onclick=\"validate_status()\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          <button class=\"btn btn-primary\" onclick=\"reset()\">clear</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t         <span id=\"status_message\"></span>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t         ");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            ");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t           \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t   \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t  </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t \r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t      \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t     \r\n");
      out.write("     </form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t                        ");
          out.write("\r\n");
          out.write("\t\t       ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t        ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("     \r\n");
          out.write("\t\t\t\t                            \r\n");
          out.write("\t\t\t ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /Login.jsp(191,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${applicationScope.visits==null || applicationScope.visits==0}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t                   ");
          out.write("      \r\n");
          out.write("\t\t\t\t        <div class=\"visits-inne-box\">\r\n");
          out.write("\t\t\t\t         ");
          if (_jspx_meth_c_005fout_005f0(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
            return true;
          out.write(" \r\n");
          out.write("\t\t\t\t          \r\n");
          out.write("\t\t\t\t         </div>\r\n");
          out.write("\t\t\t\t         \r\n");
          out.write("\t\t\t\t         \r\n");
          out.write("\t\t\t\t         ");
          out.write("\r\n");
          out.write("\t\t\t\t          ");
          if (_jspx_meth_c_005fout_005f1(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t          ");
          if (_jspx_meth_c_005fset_005f0(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
            return true;
          out.write(' ');
          out.write("\r\n");
          out.write("\t\t\t\t         \r\n");
          out.write("\t\t\t\t  ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /Login.jsp(194,13) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${1}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f1_reused = false;
    try {
      _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /Login.jsp(200,14) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f1.setValue("Total Visits");
      int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
      if (_jspx_th_c_005fout_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      _jspx_th_c_005fout_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /Login.jsp(201,14) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("visits");
      // /Login.jsp(201,14) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/Login.jsp(201,14) '${2}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${2}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /Login.jsp(201,14) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setScope("application");
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t                 ");
          out.write("  \r\n");
          out.write("\t\t                ");
          out.write("  \r\n");
          out.write("\t\t\t\t       \r\n");
          out.write("\t\t\t\t      <div class=\"visits-inne-box\"> \r\n");
          out.write("\t\t\t\t       ");
          if (_jspx_meth_c_005fout_005f2(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t      </div>\r\n");
          out.write("\t\t\t\t      \r\n");
          out.write("\t\t\t\t      \r\n");
          out.write("\t\t\t\t      \r\n");
          out.write("\t\t\t\t      ");
          if (_jspx_meth_c_005fout_005f3(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t\t       ");
          if (_jspx_meth_c_005fset_005f1(_jspx_th_c_005fotherwise_005f0, _jspx_page_context))
            return true;
          out.write(' ');
          out.write("\r\n");
          out.write("\t\t\t\t       ");
          out.write("\r\n");
          out.write("\t\t              \r\n");
          out.write("\t\t       \r\n");
          out.write("\t\t       \r\n");
          out.write("\t\t        ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f2_reused = false;
    try {
      _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /Login.jsp(209,11) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f2.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${applicationScope.visits}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
      if (_jspx_th_c_005fout_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      _jspx_th_c_005fout_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f3 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f3_reused = false;
    try {
      _jspx_th_c_005fout_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /Login.jsp(214,10) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f3.setValue("Total Visits");
      int _jspx_eval_c_005fout_005f3 = _jspx_th_c_005fout_005f3.doStartTag();
      if (_jspx_th_c_005fout_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f3);
      _jspx_th_c_005fout_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fotherwise_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f1_reused = false;
    try {
      _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fotherwise_005f0);
      // /Login.jsp(215,11) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setVar("visits");
      // /Login.jsp(215,11) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setValue(new org.apache.jasper.el.JspValueExpression("/Login.jsp(215,11) '${applicationScope.visits+1}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${applicationScope.visits+1}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /Login.jsp(215,11) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f1.setScope("application");
      int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
      if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fscope_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      _jspx_th_c_005fset_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f1_reused);
    }
    return false;
  }
}
